name: Deploy Application

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    # 0. 저장소 체크아웃
    - name: Checkout source code
      uses: actions/checkout@main

#     # 프론트엔드
#     # 1. node.js 환경설정
#     - name: Set up Node.js
#       uses: actions/setup-node@main
#       with:
#         node-version: 14.x

#     # 2. 패키지 설치
#     - name: Install dependencies
#       run: npm install

#     # 3. 빌드
#     - name: Build Page
#       run: npm run build
#       env:
#         NODE_ENV: production

    # 백엔드
    # 1. python 환경설정
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.x
        
    # 2. 패키지 설치
    - name: Install backend dependencies
      working-directory: backend
      run: |
        # python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    # 3. 빌드 및 run    
    - name: Build and deploy backend
      working-directory: backend
      env:
        FLASK_APP: app.py
      run: |
        cd backend
        cd app
        flask build  # 필요한 경우 빌드 명령을 수정하세요.
        flask run --host=0.0.0.0  # 필요한 경우 실행 명령을 수정하세요.
        
    # 4. deploy
    - name: Deploy 
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
        aws s3 sync ./build s3://ai-htp-test-bucket
